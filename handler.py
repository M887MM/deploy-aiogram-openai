from aiogram import Router, types, F, Bot
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import CommandStart

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()

# ID –≥—Ä—É–ø–ø—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
GROUP_ID = "GROUP_ID"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π group_id

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∏–∞–ª–æ–≥–æ–≤
user_dialogs = {}

# –§—É–Ω–∫—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞
def get_contact_kb():
    kb = [[KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)]]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

# –°—Ç–∞—Ä—Ç
@router.message(CommandStart())
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=get_contact_kb()
    )

# –õ–æ–≤–∏–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ –∏—Å—Ç–æ—Ä–∏—é
@router.message(F.text)
async def save_message(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_dialogs:
        user_dialogs[user_id] = []
    user_dialogs[user_id].append(message.text)

# –õ–æ–≤–∏–º –∫–æ–Ω—Ç–∞–∫—Ç
@router.message(F.contact)
async def process_contact(message: types.Message, bot: Bot):
    user_id = message.from_user.id
    phone = message.contact.phone_number
    name = message.from_user.full_name

    # –°–æ–±–∏—Ä–∞–µ–º –¥–∏–∞–ª–æ–≥
    dialog = "\n".join(user_dialogs.get(user_id, [])) or "–î–∏–∞–ª–æ–≥ –ø—É—Å—Ç"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    text = (
        f"üìû –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç!\n"
        f"–ò–º—è: {name}\n"
        f"–ù–æ–º–µ—Ä: {phone}\n\n"
        f"üí¨ –î–∏–∞–ª–æ–≥:\n{dialog}"
    )
    await bot.send_message(GROUP_ID, text)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É
    await message.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä –∏ –¥–∏–∞–ª–æ–≥ –ø–µ—Ä–µ–¥–∞–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É ‚úÖ")

    # –ß–∏—Å—Ç–∏–º –∏—Å—Ç–æ—Ä–∏—é
    user_dialogs.pop(user_id, None)